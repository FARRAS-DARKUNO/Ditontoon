// Mocks generated by Mockito 5.2.0 from annotations
// in ditonton/test/helpers/test_helper.dart.
// Do not manually edit this file.

import 'dart:async' as _i8;
import 'dart:convert' as _i45;
import 'dart:typed_data' as _i46;

import 'package:dartz/dartz.dart' as _i2;
import 'package:ditonton/common/failure.dart' as _i9;
import 'package:ditonton/data/datasources/db/database_helper.dart' as _i16;
import 'package:ditonton/data/datasources/db/database_helper_series.dart'
    as _i34;
import 'package:ditonton/data/datasources/movies-data/movie_local_data_source.dart'
    as _i14;
import 'package:ditonton/data/datasources/movies-data/movie_remote_data_source.dart'
    as _i12;
import 'package:ditonton/data/datasources/series/series_local_data_source.dart'
    as _i32;
import 'package:ditonton/data/datasources/series/series_remote_data_source.dart'
    as _i30;
import 'package:ditonton/data/models/movies-model/movie_detail_model.dart'
    as _i3;
import 'package:ditonton/data/models/movies-model/movie_model.dart' as _i13;
import 'package:ditonton/data/models/movies-model/movie_table.dart' as _i15;
import 'package:ditonton/data/models/series/series_detail_model.dart' as _i5;
import 'package:ditonton/data/models/series/series_model.dart' as _i31;
import 'package:ditonton/data/models/series/series_table.dart' as _i33;
import 'package:ditonton/domain/entities/movies-entities/movie.dart' as _i10;
import 'package:ditonton/domain/entities/movies-entities/movie_detail.dart'
    as _i11;
import 'package:ditonton/domain/entities/series/series.dart' as _i28;
import 'package:ditonton/domain/entities/series/series_detail.dart' as _i29;
import 'package:ditonton/domain/repositories/movie_repository.dart' as _i4;
import 'package:ditonton/domain/repositories/series_repository.dart' as _i6;
import 'package:ditonton/domain/usecases/movies-usecases/get_movie_detail.dart'
    as _i22;
import 'package:ditonton/domain/usecases/movies-usecases/get_movie_recommendations.dart'
    as _i21;
import 'package:ditonton/domain/usecases/movies-usecases/get_now_playing_movies.dart'
    as _i18;
import 'package:ditonton/domain/usecases/movies-usecases/get_popular_movies.dart'
    as _i19;
import 'package:ditonton/domain/usecases/movies-usecases/get_top_rated_movies.dart'
    as _i20;
import 'package:ditonton/domain/usecases/movies-usecases/get_watchlist_movies.dart'
    as _i23;
import 'package:ditonton/domain/usecases/movies-usecases/get_watchlist_status.dart'
    as _i24;
import 'package:ditonton/domain/usecases/movies-usecases/remove_watchlist.dart'
    as _i25;
import 'package:ditonton/domain/usecases/movies-usecases/save_watchlist.dart'
    as _i26;
import 'package:ditonton/domain/usecases/movies-usecases/search_movies.dart'
    as _i27;
import 'package:ditonton/domain/usecases/series/get_now_playing_series.dart'
    as _i35;
import 'package:ditonton/domain/usecases/series/get_popular_series.dart'
    as _i36;
import 'package:ditonton/domain/usecases/series/get_series_detail.dart' as _i39;
import 'package:ditonton/domain/usecases/series/get_series_recommendations.dart'
    as _i38;
import 'package:ditonton/domain/usecases/series/get_top_rated_series.dart'
    as _i37;
import 'package:ditonton/domain/usecases/series/get_watchlist_series.dart'
    as _i40;
import 'package:ditonton/domain/usecases/series/get_watchlist_series_status.dart'
    as _i41;
import 'package:ditonton/domain/usecases/series/remove_watchlist_series.dart'
    as _i42;
import 'package:ditonton/domain/usecases/series/save_watchlist_series.dart'
    as _i43;
import 'package:ditonton/domain/usecases/series/search_series.dart' as _i44;
import 'package:http/http.dart' as _i7;
import 'package:mockito/mockito.dart' as _i1;
import 'package:sqflite/sqflite.dart' as _i17;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeEither_0<L, R> extends _i1.Fake implements _i2.Either<L, R> {}

class _FakeMovieDetailResponse_1 extends _i1.Fake
    implements _i3.MovieDetailResponse {}

class _FakeMovieRepository_2 extends _i1.Fake implements _i4.MovieRepository {}

class _FakeSeriesDetailResponse_3 extends _i1.Fake
    implements _i5.SeriesDetailResponse {}

class _FakeSeriesRepository_4 extends _i1.Fake implements _i6.SeriesRepository {
}

class _FakeResponse_5 extends _i1.Fake implements _i7.Response {}

class _FakeStreamedResponse_6 extends _i1.Fake implements _i7.StreamedResponse {
}

/// A class which mocks [MovieRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieRepository extends _i1.Mock implements _i4.MovieRepository {
  MockMovieRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>> getNowPlayingMovies() =>
      (super.noSuchMethod(Invocation.method(#getNowPlayingMovies, []),
          returnValue: Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>.value(
              _FakeEither_0<_i9.Failure, List<_i10.Movie>>())) as _i8
          .Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>);
  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>> getPopularMovies() =>
      (super.noSuchMethod(Invocation.method(#getPopularMovies, []),
          returnValue: Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>.value(
              _FakeEither_0<_i9.Failure, List<_i10.Movie>>())) as _i8
          .Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>);
  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>> getTopRatedMovies() =>
      (super.noSuchMethod(Invocation.method(#getTopRatedMovies, []),
          returnValue: Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>.value(
              _FakeEither_0<_i9.Failure, List<_i10.Movie>>())) as _i8
          .Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>);
  @override
  _i8.Future<_i2.Either<_i9.Failure, _i11.MovieDetail>> getMovieDetail(
          int? id) =>
      (super.noSuchMethod(Invocation.method(#getMovieDetail, [id]),
          returnValue: Future<_i2.Either<_i9.Failure, _i11.MovieDetail>>.value(
              _FakeEither_0<_i9.Failure, _i11.MovieDetail>())) as _i8
          .Future<_i2.Either<_i9.Failure, _i11.MovieDetail>>);
  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>> getMovieRecommendations(
          int? id) =>
      (super.noSuchMethod(Invocation.method(#getMovieRecommendations, [id]),
          returnValue: Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>.value(
              _FakeEither_0<_i9.Failure, List<_i10.Movie>>())) as _i8
          .Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>);
  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>> searchMovies(
          String? query) =>
      (super.noSuchMethod(Invocation.method(#searchMovies, [query]),
          returnValue: Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>.value(
              _FakeEither_0<_i9.Failure, List<_i10.Movie>>())) as _i8
          .Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>);
  @override
  _i8.Future<_i2.Either<_i9.Failure, String>> saveWatchlist(
          _i11.MovieDetail? movie) =>
      (super.noSuchMethod(Invocation.method(#saveWatchlist, [movie]),
              returnValue: Future<_i2.Either<_i9.Failure, String>>.value(
                  _FakeEither_0<_i9.Failure, String>()))
          as _i8.Future<_i2.Either<_i9.Failure, String>>);
  @override
  _i8.Future<_i2.Either<_i9.Failure, String>> removeWatchlist(
          _i11.MovieDetail? movie) =>
      (super.noSuchMethod(Invocation.method(#removeWatchlist, [movie]),
              returnValue: Future<_i2.Either<_i9.Failure, String>>.value(
                  _FakeEither_0<_i9.Failure, String>()))
          as _i8.Future<_i2.Either<_i9.Failure, String>>);
  @override
  _i8.Future<bool> isAddedToWatchlist(int? id) =>
      (super.noSuchMethod(Invocation.method(#isAddedToWatchlist, [id]),
          returnValue: Future<bool>.value(false)) as _i8.Future<bool>);
  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>> getWatchlistMovies() =>
      (super.noSuchMethod(Invocation.method(#getWatchlistMovies, []),
          returnValue: Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>.value(
              _FakeEither_0<_i9.Failure, List<_i10.Movie>>())) as _i8
          .Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>);
}

/// A class which mocks [MovieRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieRemoteDataSource extends _i1.Mock
    implements _i12.MovieRemoteDataSource {
  MockMovieRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<List<_i13.MovieModel>> getNowPlayingMovies() =>
      (super.noSuchMethod(Invocation.method(#getNowPlayingMovies, []),
              returnValue:
                  Future<List<_i13.MovieModel>>.value(<_i13.MovieModel>[]))
          as _i8.Future<List<_i13.MovieModel>>);
  @override
  _i8.Future<List<_i13.MovieModel>> getPopularMovies() => (super.noSuchMethod(
          Invocation.method(#getPopularMovies, []),
          returnValue: Future<List<_i13.MovieModel>>.value(<_i13.MovieModel>[]))
      as _i8.Future<List<_i13.MovieModel>>);
  @override
  _i8.Future<List<_i13.MovieModel>> getTopRatedMovies() => (super.noSuchMethod(
          Invocation.method(#getTopRatedMovies, []),
          returnValue: Future<List<_i13.MovieModel>>.value(<_i13.MovieModel>[]))
      as _i8.Future<List<_i13.MovieModel>>);
  @override
  _i8.Future<_i3.MovieDetailResponse> getMovieDetail(int? id) =>
      (super.noSuchMethod(Invocation.method(#getMovieDetail, [id]),
              returnValue: Future<_i3.MovieDetailResponse>.value(
                  _FakeMovieDetailResponse_1()))
          as _i8.Future<_i3.MovieDetailResponse>);
  @override
  _i8.Future<List<_i13.MovieModel>> getMovieRecommendations(int? id) =>
      (super.noSuchMethod(Invocation.method(#getMovieRecommendations, [id]),
              returnValue:
                  Future<List<_i13.MovieModel>>.value(<_i13.MovieModel>[]))
          as _i8.Future<List<_i13.MovieModel>>);
  @override
  _i8.Future<List<_i13.MovieModel>> searchMovies(String? query) =>
      (super.noSuchMethod(Invocation.method(#searchMovies, [query]),
              returnValue:
                  Future<List<_i13.MovieModel>>.value(<_i13.MovieModel>[]))
          as _i8.Future<List<_i13.MovieModel>>);
}

/// A class which mocks [MovieLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieLocalDataSource extends _i1.Mock
    implements _i14.MovieLocalDataSource {
  MockMovieLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<String> insertWatchlist(_i15.MovieTable? movie) =>
      (super.noSuchMethod(Invocation.method(#insertWatchlist, [movie]),
          returnValue: Future<String>.value('')) as _i8.Future<String>);
  @override
  _i8.Future<String> removeWatchlist(_i15.MovieTable? movie) =>
      (super.noSuchMethod(Invocation.method(#removeWatchlist, [movie]),
          returnValue: Future<String>.value('')) as _i8.Future<String>);
  @override
  _i8.Future<_i15.MovieTable?> getMovieById(int? id) =>
      (super.noSuchMethod(Invocation.method(#getMovieById, [id]),
              returnValue: Future<_i15.MovieTable?>.value())
          as _i8.Future<_i15.MovieTable?>);
  @override
  _i8.Future<List<_i15.MovieTable>> getWatchlistMovies() => (super.noSuchMethod(
          Invocation.method(#getWatchlistMovies, []),
          returnValue: Future<List<_i15.MovieTable>>.value(<_i15.MovieTable>[]))
      as _i8.Future<List<_i15.MovieTable>>);
}

/// A class which mocks [DatabaseHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseHelper extends _i1.Mock implements _i16.DatabaseHelper {
  MockDatabaseHelper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<_i17.Database?> get database =>
      (super.noSuchMethod(Invocation.getter(#database),
              returnValue: Future<_i17.Database?>.value())
          as _i8.Future<_i17.Database?>);
  @override
  _i8.Future<int> insertWatchlist(_i15.MovieTable? movie) =>
      (super.noSuchMethod(Invocation.method(#insertWatchlist, [movie]),
          returnValue: Future<int>.value(0)) as _i8.Future<int>);
  @override
  _i8.Future<int> removeWatchlist(_i15.MovieTable? movie) =>
      (super.noSuchMethod(Invocation.method(#removeWatchlist, [movie]),
          returnValue: Future<int>.value(0)) as _i8.Future<int>);
  @override
  _i8.Future<Map<String, dynamic>?> getMovieById(int? id) =>
      (super.noSuchMethod(Invocation.method(#getMovieById, [id]),
              returnValue: Future<Map<String, dynamic>?>.value())
          as _i8.Future<Map<String, dynamic>?>);
  @override
  _i8.Future<List<Map<String, dynamic>>> getWatchlistMovies() =>
      (super.noSuchMethod(Invocation.method(#getWatchlistMovies, []),
              returnValue: Future<List<Map<String, dynamic>>>.value(
                  <Map<String, dynamic>>[]))
          as _i8.Future<List<Map<String, dynamic>>>);
}

/// A class which mocks [GetNowPlayingMovies].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetNowPlayingMovies extends _i1.Mock
    implements _i18.GetNowPlayingMovies {
  MockGetNowPlayingMovies() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.MovieRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeMovieRepository_2()) as _i4.MovieRepository);
  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>> execute() =>
      (super.noSuchMethod(Invocation.method(#execute, []),
          returnValue: Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>.value(
              _FakeEither_0<_i9.Failure, List<_i10.Movie>>())) as _i8
          .Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>);
}

/// A class which mocks [GetPopularMovies].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetPopularMovies extends _i1.Mock implements _i19.GetPopularMovies {
  MockGetPopularMovies() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.MovieRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeMovieRepository_2()) as _i4.MovieRepository);
  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>> execute() =>
      (super.noSuchMethod(Invocation.method(#execute, []),
          returnValue: Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>.value(
              _FakeEither_0<_i9.Failure, List<_i10.Movie>>())) as _i8
          .Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>);
}

/// A class which mocks [GetTopRatedMovies].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTopRatedMovies extends _i1.Mock implements _i20.GetTopRatedMovies {
  MockGetTopRatedMovies() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.MovieRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeMovieRepository_2()) as _i4.MovieRepository);
  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>> execute() =>
      (super.noSuchMethod(Invocation.method(#execute, []),
          returnValue: Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>.value(
              _FakeEither_0<_i9.Failure, List<_i10.Movie>>())) as _i8
          .Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>);
}

/// A class which mocks [GetMovieRecommendations].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetMovieRecommendations extends _i1.Mock
    implements _i21.GetMovieRecommendations {
  MockGetMovieRecommendations() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.MovieRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeMovieRepository_2()) as _i4.MovieRepository);
  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>> execute(dynamic id) =>
      (super.noSuchMethod(Invocation.method(#execute, [id]),
          returnValue: Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>.value(
              _FakeEither_0<_i9.Failure, List<_i10.Movie>>())) as _i8
          .Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>);
}

/// A class which mocks [GetMovieDetail].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetMovieDetail extends _i1.Mock implements _i22.GetMovieDetail {
  MockGetMovieDetail() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.MovieRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeMovieRepository_2()) as _i4.MovieRepository);
  @override
  _i8.Future<_i2.Either<_i9.Failure, _i11.MovieDetail>> execute(int? id) =>
      (super.noSuchMethod(Invocation.method(#execute, [id]),
          returnValue: Future<_i2.Either<_i9.Failure, _i11.MovieDetail>>.value(
              _FakeEither_0<_i9.Failure, _i11.MovieDetail>())) as _i8
          .Future<_i2.Either<_i9.Failure, _i11.MovieDetail>>);
}

/// A class which mocks [GetWatchlistMovies].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetWatchlistMovies extends _i1.Mock
    implements _i23.GetWatchlistMovies {
  MockGetWatchlistMovies() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>> execute() =>
      (super.noSuchMethod(Invocation.method(#execute, []),
          returnValue: Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>.value(
              _FakeEither_0<_i9.Failure, List<_i10.Movie>>())) as _i8
          .Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>);
}

/// A class which mocks [GetWatchListStatus].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetWatchListStatus extends _i1.Mock
    implements _i24.GetWatchListStatus {
  MockGetWatchListStatus() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.MovieRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeMovieRepository_2()) as _i4.MovieRepository);
  @override
  _i8.Future<bool> execute(int? id) =>
      (super.noSuchMethod(Invocation.method(#execute, [id]),
          returnValue: Future<bool>.value(false)) as _i8.Future<bool>);
}

/// A class which mocks [RemoveWatchlist].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoveWatchlist extends _i1.Mock implements _i25.RemoveWatchlist {
  MockRemoveWatchlist() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.MovieRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeMovieRepository_2()) as _i4.MovieRepository);
  @override
  _i8.Future<_i2.Either<_i9.Failure, String>> execute(
          _i11.MovieDetail? movie) =>
      (super.noSuchMethod(Invocation.method(#execute, [movie]),
              returnValue: Future<_i2.Either<_i9.Failure, String>>.value(
                  _FakeEither_0<_i9.Failure, String>()))
          as _i8.Future<_i2.Either<_i9.Failure, String>>);
}

/// A class which mocks [SaveWatchlist].
///
/// See the documentation for Mockito's code generation for more information.
class MockSaveWatchlist extends _i1.Mock implements _i26.SaveWatchlist {
  MockSaveWatchlist() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.MovieRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeMovieRepository_2()) as _i4.MovieRepository);
  @override
  _i8.Future<_i2.Either<_i9.Failure, String>> execute(
          _i11.MovieDetail? movie) =>
      (super.noSuchMethod(Invocation.method(#execute, [movie]),
              returnValue: Future<_i2.Either<_i9.Failure, String>>.value(
                  _FakeEither_0<_i9.Failure, String>()))
          as _i8.Future<_i2.Either<_i9.Failure, String>>);
}

/// A class which mocks [SearchMovies].
///
/// See the documentation for Mockito's code generation for more information.
class MockSearchMovies extends _i1.Mock implements _i27.SearchMovies {
  MockSearchMovies() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.MovieRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeMovieRepository_2()) as _i4.MovieRepository);
  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>> execute(
          String? query) =>
      (super.noSuchMethod(Invocation.method(#execute, [query]),
          returnValue: Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>.value(
              _FakeEither_0<_i9.Failure, List<_i10.Movie>>())) as _i8
          .Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>);
}

/// A class which mocks [SeriesRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockSeriesRepository extends _i1.Mock implements _i6.SeriesRepository {
  MockSeriesRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i28.Series>>>
      getNowPlayingSeries() => (super.noSuchMethod(
          Invocation.method(#getNowPlayingSeries, []),
          returnValue: Future<_i2.Either<_i9.Failure, List<_i28.Series>>>.value(
              _FakeEither_0<_i9.Failure, List<_i28.Series>>())) as _i8
          .Future<_i2.Either<_i9.Failure, List<_i28.Series>>>);
  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i28.Series>>> getPopularSeries() =>
      (super.noSuchMethod(Invocation.method(#getPopularSeries, []),
          returnValue: Future<_i2.Either<_i9.Failure, List<_i28.Series>>>.value(
              _FakeEither_0<_i9.Failure, List<_i28.Series>>())) as _i8
          .Future<_i2.Either<_i9.Failure, List<_i28.Series>>>);
  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i28.Series>>> getTopRatedSeries() =>
      (super.noSuchMethod(Invocation.method(#getTopRatedSeries, []),
          returnValue: Future<_i2.Either<_i9.Failure, List<_i28.Series>>>.value(
              _FakeEither_0<_i9.Failure, List<_i28.Series>>())) as _i8
          .Future<_i2.Either<_i9.Failure, List<_i28.Series>>>);
  @override
  _i8.Future<_i2.Either<_i9.Failure, _i29.SeriesDetail>> getSeriesDetail(
          int? id) =>
      (super.noSuchMethod(Invocation.method(#getSeriesDetail, [id]),
          returnValue: Future<_i2.Either<_i9.Failure, _i29.SeriesDetail>>.value(
              _FakeEither_0<_i9.Failure, _i29.SeriesDetail>())) as _i8
          .Future<_i2.Either<_i9.Failure, _i29.SeriesDetail>>);
  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i28.Series>>>
      getSeriesRecommendations(int? id) => (super.noSuchMethod(
          Invocation.method(#getSeriesRecommendations, [id]),
          returnValue: Future<_i2.Either<_i9.Failure, List<_i28.Series>>>.value(
              _FakeEither_0<_i9.Failure, List<_i28.Series>>())) as _i8
          .Future<_i2.Either<_i9.Failure, List<_i28.Series>>>);
  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i28.Series>>> searchSeries(
          String? query) =>
      (super.noSuchMethod(Invocation.method(#searchSeries, [query]),
          returnValue: Future<_i2.Either<_i9.Failure, List<_i28.Series>>>.value(
              _FakeEither_0<_i9.Failure, List<_i28.Series>>())) as _i8
          .Future<_i2.Either<_i9.Failure, List<_i28.Series>>>);
  @override
  _i8.Future<_i2.Either<_i9.Failure, String>> saveWatchlistSeries(
          _i29.SeriesDetail? series) =>
      (super.noSuchMethod(Invocation.method(#saveWatchlistSeries, [series]),
              returnValue: Future<_i2.Either<_i9.Failure, String>>.value(
                  _FakeEither_0<_i9.Failure, String>()))
          as _i8.Future<_i2.Either<_i9.Failure, String>>);
  @override
  _i8.Future<_i2.Either<_i9.Failure, String>> removeWatchlistSeries(
          _i29.SeriesDetail? series) =>
      (super.noSuchMethod(Invocation.method(#removeWatchlistSeries, [series]),
              returnValue: Future<_i2.Either<_i9.Failure, String>>.value(
                  _FakeEither_0<_i9.Failure, String>()))
          as _i8.Future<_i2.Either<_i9.Failure, String>>);
  @override
  _i8.Future<bool> isAddedToWatchlistSeries(int? id) =>
      (super.noSuchMethod(Invocation.method(#isAddedToWatchlistSeries, [id]),
          returnValue: Future<bool>.value(false)) as _i8.Future<bool>);
  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i28.Series>>> getWatchlistSeries() =>
      (super.noSuchMethod(Invocation.method(#getWatchlistSeries, []),
          returnValue: Future<_i2.Either<_i9.Failure, List<_i28.Series>>>.value(
              _FakeEither_0<_i9.Failure, List<_i28.Series>>())) as _i8
          .Future<_i2.Either<_i9.Failure, List<_i28.Series>>>);
}

/// A class which mocks [SeriesRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockSeriesRemoteDataSource extends _i1.Mock
    implements _i30.SeriesRemoteDataSource {
  MockSeriesRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<List<_i31.SeriesModel>> getNowPlayingSeries() =>
      (super.noSuchMethod(Invocation.method(#getNowPlayingSeries, []),
              returnValue:
                  Future<List<_i31.SeriesModel>>.value(<_i31.SeriesModel>[]))
          as _i8.Future<List<_i31.SeriesModel>>);
  @override
  _i8.Future<List<_i31.SeriesModel>> getPopularSeries() =>
      (super.noSuchMethod(Invocation.method(#getPopularSeries, []),
              returnValue:
                  Future<List<_i31.SeriesModel>>.value(<_i31.SeriesModel>[]))
          as _i8.Future<List<_i31.SeriesModel>>);
  @override
  _i8.Future<List<_i31.SeriesModel>> getTopRatedSeries() =>
      (super.noSuchMethod(Invocation.method(#getTopRatedSeries, []),
              returnValue:
                  Future<List<_i31.SeriesModel>>.value(<_i31.SeriesModel>[]))
          as _i8.Future<List<_i31.SeriesModel>>);
  @override
  _i8.Future<_i5.SeriesDetailResponse> getSeriesDetail(int? id) =>
      (super.noSuchMethod(Invocation.method(#getSeriesDetail, [id]),
              returnValue: Future<_i5.SeriesDetailResponse>.value(
                  _FakeSeriesDetailResponse_3()))
          as _i8.Future<_i5.SeriesDetailResponse>);
  @override
  _i8.Future<List<_i31.SeriesModel>> getSeriesRecommendations(int? id) =>
      (super.noSuchMethod(Invocation.method(#getSeriesRecommendations, [id]),
              returnValue:
                  Future<List<_i31.SeriesModel>>.value(<_i31.SeriesModel>[]))
          as _i8.Future<List<_i31.SeriesModel>>);
  @override
  _i8.Future<List<_i31.SeriesModel>> searchSeries(String? query) =>
      (super.noSuchMethod(Invocation.method(#searchSeries, [query]),
              returnValue:
                  Future<List<_i31.SeriesModel>>.value(<_i31.SeriesModel>[]))
          as _i8.Future<List<_i31.SeriesModel>>);
}

/// A class which mocks [SeriesLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockSeriesLocalDataSource extends _i1.Mock
    implements _i32.SeriesLocalDataSource {
  MockSeriesLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<String> insertWatchListSeries(_i33.SeriesTable? series) =>
      (super.noSuchMethod(Invocation.method(#insertWatchListSeries, [series]),
          returnValue: Future<String>.value('')) as _i8.Future<String>);
  @override
  _i8.Future<String> removeWatchListSeries(_i33.SeriesTable? series) =>
      (super.noSuchMethod(Invocation.method(#removeWatchListSeries, [series]),
          returnValue: Future<String>.value('')) as _i8.Future<String>);
  @override
  _i8.Future<_i33.SeriesTable?> getSeriesById(int? id) =>
      (super.noSuchMethod(Invocation.method(#getSeriesById, [id]),
              returnValue: Future<_i33.SeriesTable?>.value())
          as _i8.Future<_i33.SeriesTable?>);
  @override
  _i8.Future<List<_i33.SeriesTable>> getWatchListSeries() =>
      (super.noSuchMethod(Invocation.method(#getWatchListSeries, []),
              returnValue:
                  Future<List<_i33.SeriesTable>>.value(<_i33.SeriesTable>[]))
          as _i8.Future<List<_i33.SeriesTable>>);
}

/// A class which mocks [DatabaseHelperSeries].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseHelperSeries extends _i1.Mock
    implements _i34.DatabaseHelperSeries {
  MockDatabaseHelperSeries() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<_i17.Database?> get databaseSeries =>
      (super.noSuchMethod(Invocation.getter(#databaseSeries),
              returnValue: Future<_i17.Database?>.value())
          as _i8.Future<_i17.Database?>);
  @override
  _i8.Future<int> insertWatchlistSeries(_i33.SeriesTable? series) =>
      (super.noSuchMethod(Invocation.method(#insertWatchlistSeries, [series]),
          returnValue: Future<int>.value(0)) as _i8.Future<int>);
  @override
  _i8.Future<int> removeWatchlistSeries(_i33.SeriesTable? series) =>
      (super.noSuchMethod(Invocation.method(#removeWatchlistSeries, [series]),
          returnValue: Future<int>.value(0)) as _i8.Future<int>);
  @override
  _i8.Future<Map<String, dynamic>?> getSeriesById(int? id) =>
      (super.noSuchMethod(Invocation.method(#getSeriesById, [id]),
              returnValue: Future<Map<String, dynamic>?>.value())
          as _i8.Future<Map<String, dynamic>?>);
  @override
  _i8.Future<List<Map<String, dynamic>>> getWatchlistSeries() =>
      (super.noSuchMethod(Invocation.method(#getWatchlistSeries, []),
              returnValue: Future<List<Map<String, dynamic>>>.value(
                  <Map<String, dynamic>>[]))
          as _i8.Future<List<Map<String, dynamic>>>);
}

/// A class which mocks [GetNowPlayingSeries].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetNowPlayingSeries extends _i1.Mock
    implements _i35.GetNowPlayingSeries {
  MockGetNowPlayingSeries() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.SeriesRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeSeriesRepository_4()) as _i6.SeriesRepository);
  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i28.Series>>> execute() =>
      (super.noSuchMethod(Invocation.method(#execute, []),
          returnValue: Future<_i2.Either<_i9.Failure, List<_i28.Series>>>.value(
              _FakeEither_0<_i9.Failure, List<_i28.Series>>())) as _i8
          .Future<_i2.Either<_i9.Failure, List<_i28.Series>>>);
}

/// A class which mocks [GetPopularSeries].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetPopularSeries extends _i1.Mock implements _i36.GetPopularSeries {
  MockGetPopularSeries() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.SeriesRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeSeriesRepository_4()) as _i6.SeriesRepository);
  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i28.Series>>> execute() =>
      (super.noSuchMethod(Invocation.method(#execute, []),
          returnValue: Future<_i2.Either<_i9.Failure, List<_i28.Series>>>.value(
              _FakeEither_0<_i9.Failure, List<_i28.Series>>())) as _i8
          .Future<_i2.Either<_i9.Failure, List<_i28.Series>>>);
}

/// A class which mocks [GetTopRatedSeries].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTopRatedSeries extends _i1.Mock implements _i37.GetTopRatedSeries {
  MockGetTopRatedSeries() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.SeriesRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeSeriesRepository_4()) as _i6.SeriesRepository);
  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i28.Series>>> execute() =>
      (super.noSuchMethod(Invocation.method(#execute, []),
          returnValue: Future<_i2.Either<_i9.Failure, List<_i28.Series>>>.value(
              _FakeEither_0<_i9.Failure, List<_i28.Series>>())) as _i8
          .Future<_i2.Either<_i9.Failure, List<_i28.Series>>>);
}

/// A class which mocks [GetSeriesRecommendations].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetSeriesRecommendations extends _i1.Mock
    implements _i38.GetSeriesRecommendations {
  MockGetSeriesRecommendations() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.SeriesRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeSeriesRepository_4()) as _i6.SeriesRepository);
  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i28.Series>>> execute(int? id) =>
      (super.noSuchMethod(Invocation.method(#execute, [id]),
          returnValue: Future<_i2.Either<_i9.Failure, List<_i28.Series>>>.value(
              _FakeEither_0<_i9.Failure, List<_i28.Series>>())) as _i8
          .Future<_i2.Either<_i9.Failure, List<_i28.Series>>>);
}

/// A class which mocks [GetSeriesDetail].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetSeriesDetail extends _i1.Mock implements _i39.GetSeriesDetail {
  MockGetSeriesDetail() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.SeriesRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeSeriesRepository_4()) as _i6.SeriesRepository);
  @override
  _i8.Future<_i2.Either<_i9.Failure, _i29.SeriesDetail>> execute(int? id) =>
      (super.noSuchMethod(Invocation.method(#execute, [id]),
          returnValue: Future<_i2.Either<_i9.Failure, _i29.SeriesDetail>>.value(
              _FakeEither_0<_i9.Failure, _i29.SeriesDetail>())) as _i8
          .Future<_i2.Either<_i9.Failure, _i29.SeriesDetail>>);
}

/// A class which mocks [GetWatchlistSeries].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetWatchlistSeries extends _i1.Mock
    implements _i40.GetWatchlistSeries {
  MockGetWatchlistSeries() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.SeriesRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeSeriesRepository_4()) as _i6.SeriesRepository);
  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i28.Series>>> execute() =>
      (super.noSuchMethod(Invocation.method(#execute, []),
          returnValue: Future<_i2.Either<_i9.Failure, List<_i28.Series>>>.value(
              _FakeEither_0<_i9.Failure, List<_i28.Series>>())) as _i8
          .Future<_i2.Either<_i9.Failure, List<_i28.Series>>>);
}

/// A class which mocks [GetWatchlistSeriesStatus].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetWatchlistSeriesStatus extends _i1.Mock
    implements _i41.GetWatchlistSeriesStatus {
  MockGetWatchlistSeriesStatus() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.SeriesRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeSeriesRepository_4()) as _i6.SeriesRepository);
  @override
  _i8.Future<bool> execute(int? id) =>
      (super.noSuchMethod(Invocation.method(#execute, [id]),
          returnValue: Future<bool>.value(false)) as _i8.Future<bool>);
}

/// A class which mocks [RemoveWatchlistSeries].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoveWatchlistSeries extends _i1.Mock
    implements _i42.RemoveWatchlistSeries {
  MockRemoveWatchlistSeries() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.SeriesRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeSeriesRepository_4()) as _i6.SeriesRepository);
  @override
  _i8.Future<_i2.Either<_i9.Failure, String>> execute(
          _i29.SeriesDetail? series) =>
      (super.noSuchMethod(Invocation.method(#execute, [series]),
              returnValue: Future<_i2.Either<_i9.Failure, String>>.value(
                  _FakeEither_0<_i9.Failure, String>()))
          as _i8.Future<_i2.Either<_i9.Failure, String>>);
}

/// A class which mocks [SaveWatchlistSeries].
///
/// See the documentation for Mockito's code generation for more information.
class MockSaveWatchlistSeries extends _i1.Mock
    implements _i43.SaveWatchlistSeries {
  MockSaveWatchlistSeries() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.SeriesRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeSeriesRepository_4()) as _i6.SeriesRepository);
  @override
  _i8.Future<_i2.Either<_i9.Failure, String>> execute(_i29.SeriesDetail? tvs) =>
      (super.noSuchMethod(Invocation.method(#execute, [tvs]),
              returnValue: Future<_i2.Either<_i9.Failure, String>>.value(
                  _FakeEither_0<_i9.Failure, String>()))
          as _i8.Future<_i2.Either<_i9.Failure, String>>);
}

/// A class which mocks [SearchSeries].
///
/// See the documentation for Mockito's code generation for more information.
class MockSearchSeries extends _i1.Mock implements _i44.SearchSeries {
  MockSearchSeries() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.SeriesRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeSeriesRepository_4()) as _i6.SeriesRepository);
  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i28.Series>>> execute(
          String? query) =>
      (super.noSuchMethod(Invocation.method(#execute, [query]),
          returnValue: Future<_i2.Either<_i9.Failure, List<_i28.Series>>>.value(
              _FakeEither_0<_i9.Failure, List<_i28.Series>>())) as _i8
          .Future<_i2.Either<_i9.Failure, List<_i28.Series>>>);
}

/// A class which mocks [Client].
///
/// See the documentation for Mockito's code generation for more information.
class MockHttpClient extends _i1.Mock implements _i7.Client {
  MockHttpClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<_i7.Response> head(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(Invocation.method(#head, [url], {#headers: headers}),
              returnValue: Future<_i7.Response>.value(_FakeResponse_5()))
          as _i8.Future<_i7.Response>);
  @override
  _i8.Future<_i7.Response> get(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(Invocation.method(#get, [url], {#headers: headers}),
              returnValue: Future<_i7.Response>.value(_FakeResponse_5()))
          as _i8.Future<_i7.Response>);
  @override
  _i8.Future<_i7.Response> post(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i45.Encoding? encoding}) =>
      (super.noSuchMethod(
              Invocation.method(#post, [url],
                  {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: Future<_i7.Response>.value(_FakeResponse_5()))
          as _i8.Future<_i7.Response>);
  @override
  _i8.Future<_i7.Response> put(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i45.Encoding? encoding}) =>
      (super.noSuchMethod(
              Invocation.method(#put, [url],
                  {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: Future<_i7.Response>.value(_FakeResponse_5()))
          as _i8.Future<_i7.Response>);
  @override
  _i8.Future<_i7.Response> patch(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i45.Encoding? encoding}) =>
      (super.noSuchMethod(
              Invocation.method(#patch, [url],
                  {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: Future<_i7.Response>.value(_FakeResponse_5()))
          as _i8.Future<_i7.Response>);
  @override
  _i8.Future<_i7.Response> delete(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i45.Encoding? encoding}) =>
      (super.noSuchMethod(
              Invocation.method(#delete, [url],
                  {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: Future<_i7.Response>.value(_FakeResponse_5()))
          as _i8.Future<_i7.Response>);
  @override
  _i8.Future<String> read(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(Invocation.method(#read, [url], {#headers: headers}),
          returnValue: Future<String>.value('')) as _i8.Future<String>);
  @override
  _i8.Future<_i46.Uint8List> readBytes(Uri? url,
          {Map<String, String>? headers}) =>
      (super.noSuchMethod(
              Invocation.method(#readBytes, [url], {#headers: headers}),
              returnValue: Future<_i46.Uint8List>.value(_i46.Uint8List(0)))
          as _i8.Future<_i46.Uint8List>);
  @override
  _i8.Future<_i7.StreamedResponse> send(_i7.BaseRequest? request) =>
      (super.noSuchMethod(Invocation.method(#send, [request]),
              returnValue:
                  Future<_i7.StreamedResponse>.value(_FakeStreamedResponse_6()))
          as _i8.Future<_i7.StreamedResponse>);
  @override
  void close() => super.noSuchMethod(Invocation.method(#close, []),
      returnValueForMissingStub: null);
}
